import 'package:flutter/material.dart';
import '../main.dart';
// import 'home_page.dart'; // ‚Üê„ÇÇ„ÅÜÁõ¥Êé•„Éõ„Éº„É†„Å´Ë°å„Åã„Å™„ÅÑ„ÅÆ„Åß‰∏çË¶Å
import 'home_shell.dart'; // ‚ÜêÊñ∞„Åó„Åè‰Ωú„Å£„Åü„Çø„Éñ‰ªò„Åç„É°„Ç§„É≥„É¨„Ç§„Ç¢„Ç¶„Éà„Çí„Ç§„É≥„Éù„Éº„Éà

class LoginPage extends StatefulWidget {
  static const routeName = '/login';
  const LoginPage({super.key});

  @override
  State<LoginPage> createState() => _LoginPageState();
}

class _LoginPageState extends State<LoginPage> {
  final _idCtrl = TextEditingController();
  final _pwCtrl = TextEditingController();
  bool _loading = false;
  String? _errorText;

  Future<void> _onLogin() async {
    setState(() {
      _loading = true;
      _errorText = null;
    });

    try {
      // AppScope „ÅØ main.dart „ÅßÁî®ÊÑè„Åó„Åü InheritedWidget
      // ‚Üí Áñë‰ºº„É≠„Ç∞„Ç§„É≥Âá¶ÁêÜ„Å´„Ç¢„ÇØ„Çª„Çπ„Åó„Å¶„Çã
      final user = await AppScope.of(context).login(
        userId: _idCtrl.text.trim(),
        password: _pwCtrl.text.trim(),
      );

      if (!mounted) return;

      if (user == null) {
        // „É≠„Ç∞„Ç§„É≥Â§±ÊïóÊôÇ„ÅÆ„Ç®„É©„Éº„É°„ÉÉ„Çª„Éº„Ç∏
        setState(() {
          _errorText = '„É≠„Ç∞„Ç§„É≥„Å´Â§±Êïó„Åó„Åæ„Åó„Åü';
        });
      } else {
        // üîÅ „Åì„Åì„ÇíÂ§âÊõ¥Ôºö
        // „ÅÑ„Åæ„Åæ„Åß„ÅØ HomePage „Å´Ë°å„Å£„Å¶„Åü
        // „Åì„Çå„Åã„Çâ„ÅØ„Çø„Éñ„Éê„Éº„ÇíÊåÅ„Å£„Åü HomeShell „Å´Ë°å„Åè
        Navigator.of(context).pushNamedAndRemoveUntil(
          HomeShell.routeName, // ‚Üê„Åì„Åì„Åå„Éù„Ç§„É≥„Éà
          (route) => false, // „Åì„Çå„Åß„É≠„Ç∞„Ç§„É≥ÁîªÈù¢„ÇíÂ±•Ê≠¥„Åã„ÇâÊ∂à„Åô
        );
      }
    } catch (e) {
      setState(() {
        _errorText = '„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü';
      });
    } finally {
      if (mounted) {
        setState(() {
          _loading = false;
        });
      }
    }
  }

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);

    return Scaffold(
      backgroundColor: theme.scaffoldBackgroundColor,
      body: SafeArea(
        child: SingleChildScrollView(
          padding: const EdgeInsets.fromLTRB(24, 32, 24, 24),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              // „Éñ„É©„É≥„Éâ„Éò„ÉÉ„ÉÄ„Éº
              Text(
                'INSIGHT',
                style: theme.textTheme.headlineSmall?.copyWith(
                  fontWeight: FontWeight.w700,
                ),
              ),
              const SizedBox(height: 4),
              Text(
                'Êó•„ÄÖ„ÅÆÁ©ç„ÅøÈáç„Å≠„ÇíË¶ã„Åà„ÇãÂåñ„Åó„ÄÅÊàêÈï∑„Å´„Å§„Å™„Åí„Çã',
                style: theme.textTheme.bodySmall,
              ),
              const SizedBox(height: 24),

              // „É≠„Ç∞„Ç§„É≥„Éï„Ç©„Éº„É†Ôºà„Ç´„Éº„ÉâÈ¢®Ôºâ
              Card(
                child: Padding(
                  padding: const EdgeInsets.all(20),
                  child: Column(
                    children: [
                      TextField(
                        controller: _idCtrl,
                        decoration: const InputDecoration(
                          labelText: '„É¶„Éº„Ç∂„ÉºID',
                          hintText: '‰æã: player_12',
                        ),
                      ),
                      const SizedBox(height: 16),
                      TextField(
                        controller: _pwCtrl,
                        obscureText: true,
                        decoration: const InputDecoration(
                          labelText: '„Éë„Çπ„ÉØ„Éº„Éâ',
                          hintText: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢',
                        ),
                      ),
                      if (_errorText != null) ...[
                        const SizedBox(height: 12),
                        Text(
                          _errorText!,
                          style: const TextStyle(
                            color: Colors.redAccent,
                            fontSize: 13,
                            fontWeight: FontWeight.w500,
                          ),
                        ),
                      ],
                      const SizedBox(height: 24),
                      ElevatedButton(
                        onPressed: _loading ? null : _onLogin,
                        child: _loading
                            ? const SizedBox(
                                width: 20,
                                height: 20,
                                child: CircularProgressIndicator(
                                  strokeWidth: 2,
                                  valueColor: AlwaysStoppedAnimation<Color>(
                                    Colors.white,
                                  ),
                                ),
                              )
                            : const Text('„É≠„Ç∞„Ç§„É≥'),
                      ),
                    ],
                  ),
                ),
              ),

              const SizedBox(height: 24),
              Text(
                '‚Äª„Äåcoach„Äç„ÇíÂê´„ÇÄID„Åß„É≠„Ç∞„Ç§„É≥„Åô„Çã„Å®È°ßÂïè„Ç¢„Ç´„Ç¶„É≥„Éà„Å®„Åó„Å¶Êâ±„Çè„Çå„Åæ„Åô',
                style: theme.textTheme.bodySmall,
              ),
            ],
          ),
        ),
      ),
    );
  }
}
